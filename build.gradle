apply plugin: 'galaxybruce-pioneer'

buildscript {
    apply from: rootProject.file('gradle/config/config.gradle')

    addRepos(repositories)

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.3'
        for (plugin in dep.plugin) {
            classpath plugin
        }
    }
}

allprojects {
    addRepos(repositories)
}

subprojects {
    project.configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'org.jetbrains.kotlin') {
                if (details.requested.name.contains('kotlin-')) {// details.requested.name == 'kotlin-stdlib' && details.requested.version == '1.3.0-rc-57'
                    details.useVersion "${kotlin_version}"
                }
            }
            if (details.requested.group == 'androidx.lifecycle') {
                if (!details.requested.name.contains('lifecycle-extensions')) {
                    details.useVersion "${lifecycle_version}"
                }
            }
        }

        resolutionStrategy {
//            force 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:1.3.4'
            int cacheTime = 24
            // hours minutes seconds
            cacheChangingModulesFor cacheTime, 'hours'  // SNAPSHOT版本号
            cacheDynamicVersionsFor cacheTime, 'hours'  // 采用动态版本声明的依赖缓存10分钟
        }

        resolutionStrategy.dependencySubstitution {
           // todo
        }
    }

    project.afterEvaluate {
        if (project.plugins.hasPlugin(com.android.build.gradle.AppPlugin)
                || project.plugins.hasPlugin(com.android.build.gradle.LibraryPlugin)) {
            project.android.defaultConfig {
//                buildConfigField "String", "APP_NAME", "\"${rootProject.appName}\""
//                buildConfigField "String", "APP_CODE", "\"${rootProject.appCode}\""
//                resValue("string", "APP_NAME", "${BASE_APPSCHEME}")
            }

//            if (project.name == "app") {
//                project.android.flavorDimensions "APP"
//                project.android.productFlavors.all {
//                    flavor -> flavor.manifestPlaceholders = [InstallChannel_Value: name]
//                }
//            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
